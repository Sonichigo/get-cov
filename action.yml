name: Go Coverage Report
description: |
  This action runs code coverage for Go based projects, uploads the coverage report as an artifact, and comments on the pull request with the link to the deployed coverage report.
author: sonichigo
branding:
  icon: 'refresh-cw'
  color: 'orange'

inputs:
  package-directory:
    description: 'Package directory to run tests'
    required: false
    default: './...'
  coverage-file:
    description: 'Name of the coverage file (without extension)'
    required: false
    default: 'coverage-report'
  coverage-threshold:
    description: 'Minimum coverage percentage required.'
    required: false
    default: '80'
  token:
    description: 'Token with Deployment Permissions'
    required: true
    default: ${{ github.token }}

outputs:
  coverage-report-file:
    description: 'Path to the generated coverage report file'
    value: ${{ steps.generate-report.outputs.report-file }}
  url:
    description: 'URL of deployed pages'
    value: ${{ steps.deployment.outputs.page_url }}

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.22.*

    - name: Generate coverage report
      id: generate-report
      run: |
        PKG_DIR="${{ inputs.package-directory || './...' }}"
        COVERAGE_FILE="${{ inputs.coverage-file || 'coverage-report' }}"
        go test -race -coverprofile=$COVERAGE_FILE.out $PKG_DIR
        go tool cover -html=$COVERAGE_FILE.out -o $COVERAGE_FILE.html
        COVERAGE_PERCENTAGE=$(go tool cover -func=$COVERAGE_FILE.out | grep total: | awk '{print substr($3, 1, length($3)-1)}')
        if (( $(echo "$COVERAGE_PERCENTAGE < ${{ inputs.coverage-threshold }}" | bc -l) )); then
          echo "Error: Coverage $COVERAGE_PERCENTAGE% is below the required threshold of ${{ inputs.coverage-threshold }}%"
          exit 1
        fi
        echo "report-file=$COVERAGE_FILE.html" >> $GITHUB_OUTPUT
      shell: bash

    - name: Upload coverage report artifact
      id: upload-artifact
      uses: actions/upload-pages-artifact@main
      with:
        name: github-pages
        path: ${{ steps.generate-report.outputs.report-file }}

    - name: Deploy to GitHub Pages
      id: deployment
      if: ${{ github.event_name == 'pull_request' }}
      uses: actions/deploy-pages@v4
      env:
        name: github-pages
        url: ${{ steps.deployment.outputs.page_url }}
      with: 
        artifact_name: github-pages
        token: ${{ github.token }}
        preview: true

    - name: Comment coverage report link
      if: ${{ github.event_name == 'pull_request' }}
      uses: actions/github-script@v6
      with:
        github-token: ${{ github.token }}
        script: |
          const issueNumber = context.issue.number;
          const repo = context.repo.repo;
          const owner = context.repo.owner;

          github.rest.issues.createComment({
            issue_number: issueNumber,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `See the coverage report at: [Deployment Log](${{ steps.deployment.outputs.page_url }})`
          });
