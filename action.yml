name: Go Coverage Report
description: |
  This action runs code coverage for Go based projects and uploads the coverage report as an artifact.
author: sonichigo
branding:
  icon: 'refresh-cw'
  color: 'orange'

inputs:
    package-directory:
      description: 'Package directory to run tests'
      required: false
      default: './...'
    coverage-file:
      description: 'Name of the coverage file (without extension)'
      required: false
      default: 'coverage-report'
    coverage-threshold:
      description: 'Minimum coverage percentage required.'
      required: false
      default: '80'

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      uses: actions/checkout@main

    - name: Set up Go
      uses: actions/setup-go@main
      with:
        go-version: 1.22.*

    - name: Generate coverage report
      run: |
        PKG_DIR="${{ inputs.package-directory || './...' }}"
        COVERAGE_FILE="${{ inputs.coverage-file || 'coverage-report' }}"
        go test -race -coverprofile=$COVERAGE_FILE.out $PKG_DIR
        go tool cover -html=$COVERAGE_FILE.out -o $COVERAGE_FILE.html
        COVERAGE_PERCENTAGE=$(go tool cover -func=$COVERAGE_FILE.out | grep total: | awk '{print substr($3, 1, length($3)-1)}')
        if (( $(echo "$COVERAGE_PERCENTAGE < ${{ inputs.coverage-threshold }}" | bc -l) )); then
          echo "Error: Coverage $COVERAGE_PERCENTAGE% is below the required threshold of ${{ inputs.coverage-threshold }}%"
          exit 1
        fi
      shell: bash

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ github.token }}
        publish_dir: ./dist

    - name: Comment coverage report link
      if: ${{ github.event_name == 'pull_request' }}
      uses: actions/github-script@v7
      with:
        github-token: ${{ github.token }}
        script: |
          let url = process.env.GITHUB_SERVER_URL + '/' + process.env.GITHUB_REPOSITORY + '/blob/' + process.env.GITHUB_HEAD_REF + '/${{ inputs.coverage-file || 'coverage-report' }}.html';
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `See the coverage report at: [${url}](${url})`
          })
      